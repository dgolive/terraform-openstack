name: Terraform CICD for OpenStack

on:
  push:
    branches: 
      - main
    # paths:
    #   # - 'terraform-openstack/**'
    #   - 'terraform-openstack/single-vm/**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v2
      #   with:
      #     terraform_version: 1.9.4
      - name: Install Terraform
        run: |
          wget https://releases.hashicorp.com/terraform/1.9.4/terraform_1.9.4_linux_amd64.zip
          unzip terraform_1.9.4_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform --version
        shell: bash

  security_check:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Install tfsec
        run: |
          wget https://github.com/aquasecurity/tfsec/releases/download/v1.28.10/tfsec-linux-amd64
          chmod +x tfsec-linux-amd64
          sudo mv tfsec-linux-amd64 /usr/local/bin/tfsec

      - name: Run tfsec
        run: tfsec single-vm

  deploy:
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    needs: security_check
    steps:
      - name: Terraform Init
        run: terraform init
        working-directory: single-vm

      - name: Terraform Validate
        run: terraform validate
        working-directory: single-vm

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: single-vm

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: single-vm      

      # - name: Terraform Output
      #   run: terraform output
      #   working-directory: single-vm

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: single-vm  